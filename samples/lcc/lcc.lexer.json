{
    "version": "1.0.0",
    "description": "Describes a simple programming language with type hints",
    "reserved-keywords": [],
    "definitions": [
        {"name": "digit", "expression": "[\\d]"},
        {"name": "letter", "expression": "[a-zA-Z]"}
    ],
    "tokens": [
        {"name": "whitespace", "expression": " "},
        {"name": "if", "expression": "if"},
        {"name": "else", "expression": "else"},
        {"name": "for", "expression": "for"},
        {"name": "new", "expression": "new"},
        {"name": "function", "expression": "function"},
        {"name": "break", "expression": "break"},
        {"name": "print", "expression": "print"},
        {"name": "read", "expression": "read"},
        {"name": "return", "expression": "return"},
        {"name": "semicolon", "expression": ";"},
        {"name": "type", "expression": "^int$|^float$|^boolean$|^string$"},
        {"name": "null_literal", "expression": "null"},
        {"name": "id", "expression": "letter(letter|digit)*"},
        {"name": "attr", "expression": "="},
        {"name": "c_op", "expression": "^>$|^>=$|^<$|^<=$|^==$|^!=$"},
        {"name": "a1_op", "expression": "^\\+$|^-$"},
        {"name": "a2_op", "expression": "^\\*$|^/$|^%$"},
        {"name": "l_curly", "expression": "[\\{]"},
        {"name": "r_curly", "expression": "[\\}]"},
        {"name": "l_par", "expression": "[\\(]"},
        {"name": "r_par", "expression": "[\\)]"},
        {"name": "l_bra", "expression": "[\\[]"},
        {"name": "r_bra", "expression": "[\\]]"},
        {"name": "boolean_literal", "expression": "^true$|^false$"},
        {"name": "float_literal", "expression": "digit*\\.digit*"},
        {"name": "integer_literal", "expression": "digitdigit*"},
        {"name": "string_literal", "expression": "'.*'"}
    ],
    "grammar": {
        "nonterminals": [
            "S",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J"
        ],
        "terminals": [
            "type",
            "id",
            "attr",
            "c_op",
            "a1_op",
            "a2_op",
            "l_curly",
            "r_curly",
            "l_par",
            "r_par",
            "boolean",
            "integer",
            "float",
            "if",
            "&"
        ],
        "initial": "S",
        "productions": [
            {"head": "S", "body": "A|C|D|E"},
            {"head": "A", "body": "type id attr F"},
            {"head": "B", "body": "integer|float|boolean"},
            {"head": "C", "body": "id c_op id"},
            {"head": "D", "body": "if C l_curly S r_curly"},
            {"head": "E", "body": "id attr F"},
            {"head": "F", "body": "H G"},
            {"head": "G", "body": "a1_op H G|&"},
            {"head": "H", "body": "J I"},
            {"head": "I", "body": "a2_op J I|&"},
            {"head": "J", "body": "l_par F r_par|id|integer|float|boolean"}
        ]
    }
}